{
  "name": "linter-eslint-node",
  "main": "./lib/main",
  "version": "1.0.6",
  "description": "Lint JavaScript on the fly, using ESLint (v8 or greater)",
  "keywords": [
    "linter-eslint",
    "eslint"
  ],
  "repository": "https://github.com/AtomLinter/linter-eslint-node",
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0",
    "node": "^14.16.0"
  },
  "files": [
    "lib"
  ],
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "8.0.0",
    "compare-versions": "^6.0.0",
    "eslint": "8.47.0",
    "lodash.get": "4.4.2",
    "moize": "6.1.6",
    "throttle-debounce": "5.0.0",
    "which": "3.0.1"
  },
  "devDependencies": {
    "@types/eslint": "8.40.2",
    "@types/throttle-debounce": "5.0.0",
    "@types/which": "3.0.0",
    "atom-jasmine3-test-runner": "5.2.11",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-n": "16.0.1",
    "patch-package": "8.0.0",
    "rimraf": "3.0.2"
  },
  "atomTestRunner": "./spec/runner",
  "scripts": {
    "lint": "eslint . --fix",
    "postinstall": "patch-package",
    "test.lint": "eslint .",
    "test": "atom --test spec"
  },
  "package-deps": [
    {
      "name": "linter",
      "minimumVersion": "3.3.0"
    }
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "activationHooks": [
    "core:loaded-shell-environment"
  ],
  "configSchema": {
    "fixOnSave": {
      "order": 1,
      "title": "Fix errors on save",
      "description": "Have ESLint automatically apply any fixes when linting on save.",
      "type": "boolean",
      "default": false
    },
    "scopes": {
      "order": 2,
      "title": "List of scopes to run ESLint on",
      "description": "Run `Editor: Log Cursor Scope` to determine the scopes for a file. To lint JavaScript inside HTML files, add `source.js.embedded.html` to this list and be sure that `eslint-plugin-html` is installed and added to your `.eslintrc`.",
      "type": "array",
      "default": [
        "source.js",
        "source.jsx",
        "source.js.jsx",
        "source.flow",
        "source.babel",
        "source.js-semantic",
        "source.ts"
      ],
      "items": {
        "type": "string"
      }
    },
    "nodeLocation": {
      "order": 3,
      "type": "object",
      "title": "Node Options",
      "collapsed": true,
      "properties": {
        "overrideNodeExecutable": {
          "order": 1,
          "title": "Override the Node Executable",
          "description": "Pick a path to a NodeExecutable to always use to run eslint",
          "type": [
            "string",
            "null"
          ]
        },
        "nvmDir": {
          "order": 2,
          "title": "The NVM directory",
          "description": "This value will overwrite your $NVM_DIR environment variable",
          "type": [
            "string",
            "null"
          ]
        },
        "voltaHome": {
          "order": 3,
          "title": "The Volta Home directory",
          "description": "This value will overwrite your $VOLTA_HOME environment variable",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "eslintLocation": {
      "order": 4,
      "type": "object",
      "title": "ESLint Options",
      "collapsed": true,
      "properties": {
        "overrideESLintClient": {
          "order": 1,
          "title": "Override the ESLint Client",
          "description": "Pick a path to a specific eslint api to always use. This can also be 'global' to use the 'nvm i -g eslint' or 'bundled' to always use eslint that is bundled in this package",
          "type": [
            "string",
            "null"
          ]
        },
        "overrideESLintConfig": {
          "order": 2,
          "title": "Override the ESLint Config",
          "description": "Pick a path to a specific eslint config to always use",
          "type": [
            "string",
            "null"
          ]
        },
        "resolvePluginsRelativeTo": {
          "order": 3,
          "title": "Resolve ESLint plugins relative to",
          "description": "A folder where plugins should be resolved from (CWD by default)",
          "type": [
            "string",
            "null"
          ]
        },
        "allowGlobal": {
          "order": 4,
          "title": "Allow global ESLint",
          "description": "After failing to find eslint locally can the globally insalled eslint be used (only 'npm i -g eslint' can currently be found)",
          "type": "boolean",
          "default": false
        },
        "allowBundled": {
          "order": 5,
          "title": "Allow Bundled ESLint",
          "description": "After failing to find eslint locally and globally can the bundled eslint version be used",
          "type": "boolean",
          "default": false
        }
      }
    },
    "advanced": {
      "order": 5,
      "type": "object",
      "title": "Uncommon",
      "collapsed": true,
      "properties": {
        "rulesToDisableWhileFixing": {
          "order": 1,
          "title": "Disable specific rules from fixes",
          "description": "Rules in this list will never have fixes applied, whether during a save or when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "rulesToDisableWhileTyping": {
          "order": 2,
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ignoreFixableRulesWhileTyping": {
          "order": 3,
          "title": "Ignore fixable rules while typing",
          "description": "Ignore all violations that have fixes. Applies to linting that happens due to document changes. Does not apply to lint-on-save.",
          "type": "boolean",
          "default": false
        },
        "disableEslintIgnore": {
          "order": 4,
          "title": "Disregard .eslintignore",
          "description": "Lint all files, even files mentioned in a project's `.eslintignore` file.",
          "type": "boolean",
          "default": false
        },
        "showRuleIdInMessage": {
          "order": 5,
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true
        },
        "enableLogging": {
          "order": 6,
          "title": "Enable Logging",
          "description": "Log diagnostic messages to the developer console. If you want to file a bug against `linter-eslint-node`, these messages may be useful.",
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}
